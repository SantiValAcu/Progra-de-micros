;****************************************************************
; Universidad del Valle de Guatemala 
; IE2023: Programación de Microcontroladores 
; Test.asm 
; 
;Author: Santiago Valdez Acuña                                                       
;Proyecto: Lab #3
;Hardware: ATMega328P 
;Creado: 19/02/2025 
;Modificado: 19/02/2025 
;Descipción: Contador hexadecimal y binario usando el TMR0
;****************************************************************

.include "M328PDEF.inc"
.cseg
.org 0x0000 
	JMP INICIO
.org PCI0addr		; Dirección de la interrupción PCINT0 (on-change)
	RJMP rut_int
.org 0x0020			; Dirección de la interrupción timer0 overflow
	JMP TMR0_ISR

; Configuración de la pila
INICIO:
	LDI R16, LOW(RAMEND)
	OUT SPL, R16		; Cargar 0xff a SPL
	LDI R16, HIGH(RAMEND)
	OUT SPH, R16		; Cargar 0x08 a SPH

SETUP:
	CLI		; Deshabilitar interrupciones globales
	; Configurar Prescaler "Principal"
	LDI R16, (1 << CLKPCE)
	STS CLKPR, R16		; Habilitar cambio de PRESCALER
	LDI R16, 0x03		; Cambio de frecuencia a 1MHz
	STS CLKPR, R16

	; Inicializamos el timer0
	LDI R16, (1 << CS01	| 1 << CS00 ) 
	OUT TCCR0B, R16		; Prescaler a 64
	LDI R16, 100
	OUT TCNT0, R16		; 10ms
	; Configuración de puertos
	; Puerto D como salida para los LEDs del contador hexadecimal
    LDI R16, 0xFF
    OUT DDRD, R16
    LDI R16, 0x7B  ; LEDs formando el 0 en display
    OUT PORTD, R16
	; Puerto B como entrada 
	LDI R16, 0X00
	OUT DDRB, R16 
	LDI R16, 0XFF
	OUT PORTB, R16 
	; Puerto C como salida para los LEDs del contador binario
    LDI R16, 0xFF
    OUT DDRC, R16
    LDI R16, 0x00  ; LEDs apagados
    OUT PORTC, R16
	; Configuración de interrupciones
	; Interrupción de botones
	LDI R16, (1 << PCIE0)	; Habilitar el registro de control del PORTB
	STS PCICR, R16
	LDI R16, (1 << PCINT0) | (1 << PCINT1) ; Habilitar PB0 y PB1
	STS PCMSK0, R16			; Habilitar registro de mascara en PORTB
	; Interrupcion de timer
	LDI R16, (1 << TOIE0)	; Habilitar timer overflow
	STS TIMSK0, R16
	LDI R16, (1 << TOV0)	; Habilitar mascara overflow
	STS TIFR0, R16
	;Configuramos valores iniciales
	LDI R17, 0
	LDI R18, 0
	LDI R19, 0
	LDI R20, 0
	SEI ; Habilitar interrupciones globales

; Bucle principal
LOOP:
	RJMP LOOP ;Se realizaran cambios cuando se detecte una interrupción, si no queda en bucle

; Rutina de interrupción
rut_int:
	PUSH R16			; Guardamos contenido de R16
	IN R16, SREG	
	PUSH R16			; Guardamos contenido de SREG
	;-------------------------------------------------
	IN R16, PINB        ; Leemos el estado del puerto B
	SBRS R16, 0			; Salta si PB0 está en 1 (no presionado)
    INC R17				; Incrementa R17
    CPI R17, 0x10
    BRNE continuar		; Si es igual salta
    LDI R17, 0x00		; Reiniciar si llega a 16
continuar:
    SBRS R16, 1			; Salta si PB1 está a 1 (no presionado)
    DEC R17				; Decrementa R17
    CPI R17, 0xFF
    BRNE terminar		; Si es igual salta
    LDI R17, 0x0F		; Reiniciar si llega a -1 (255)
terminar:
    OUT PORTC, R17  
	;------------------------------------------------
	POP R16				
	OUT SREG, R16		; Regresar el valor de SREG
	POP R16				; Regresar el valor de R16
	RETI

TMR0_ISR:
	LDI R16, 100		; Valor del TCNT0
	OUT TCNT0, R16
	INC R18				; Incrementar R18
	CPI R18, 200		; Debe de pasar 200 veces el overflow para que sea 1s
	BRNE salir			; Si no se sale
	CLR R18				; Limpiar el contador
	INC R19				; Incrementar contador intermedio del display
	CPI R19, 0x0A		; Si se pasa de 9 se reinicia
	BRNE actualizar		; Si no actualizar
	LDI R19, 0x00		; Reiniciar contador a 0
actualizar:
	CPI R19, 0x00		; Verificar si el contador esta en 0
	BREQ led0
	CPI R19, 0x01		; Verificar si el contador esta en 1
	BREQ led1
	CPI R19, 0x02		; Verificar si el contador esta en 2
	BREQ led2
	CPI R19, 0x03		; Verificar si el contador esta en 3
	BREQ led3
	CPI R19, 0x04		; Verificar si el contador esta en 4
	BREQ led4
	CPI R19, 0x05		; Verificar si el contador esta en 5
	BREQ led5
	CPI R19, 0x06		; Verificar si el contador esta en 6
	BREQ led6
	CPI R19, 0x07		; Verificar si el contador esta en 7
	BREQ led7
	CPI R19, 0x08		; Verificar si el contador esta en 8
	BREQ led8
	CPI R19, 0x09		; Verificar si el contador esta en 9
	BREQ led9
salir:
	RETI

led0:
	LDI R20, 0x7B		; Ponerle el valor de 0 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led1:
	LDI R20, 0x0A		; Ponerle el valor de 1 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led2:
	LDI R20, 0xB3		; Ponerle el valor de 2 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led3:
	LDI R20, 0x9B		; Ponerle el valor de 3 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led4:
	LDI R20, 0xCA		; Ponerle el valor de 4 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led5:
	LDI R20, 0xD9		; Ponerle el valor de 5 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led6:
	LDI R20, 0xF9		; Ponerle el valor de 6 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led7:
	LDI R20, 0x0B		; Ponerle el valor de 7 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led8:
	LDI R20, 0xFB		; Ponerle el valor de 8 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
led9:
	LDI R20, 0xDB		; Ponerle el valor de 9 a r21
	OUT PORTD, R20		; Mostrarlo en el display
	RJMP salir
