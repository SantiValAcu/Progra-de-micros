;****************************************************************
; Universidad del Valle de Guatemala 
; IE2023: Programación de Microcontroladores 
; Test.asm 
; 
;Author: Santiago Valdez Acuña                                                       
;Proyecto: postlab #2
;Hardware: ATMega328P 
;Creado: 17/02/2025 
;Modificado: 17/02/2025 
;Descipción: Contador que incrementa cada 1s, timer0 a 100ms. 
;****************************************************************

.include "M328PDEF.inc"
.cseg
.org 0x0000           

// Configuración de la pila
LDI R16, LOW(RAMEND)
OUT SPL, R16 // Cargar 0xff a SPL
LDI R16, HIGH(RAMEND)
OUT SPH, R16 // Cargar 0x08 a SPH

; Configuración de puertos
SETUP:
	; Configurar Prescaler "Principal"
	LDI R16, (1 << CLKPCE)
	STS CLKPR, R16		; Habilitar cambio de PRESCALER
	LDI R16, 0x07		; Cambio de frecuencia a 125kHz (CLKPS = 7)
	STS CLKPR, R16

	; Inicializamos el timer0
	LDI R16, (1 << CS02	| 1 << CS00 ) 
	OUT TCCR0B, R16		; Prescaler a 1024
	LDI R16, 0xF4
	OUT TCNT0, R16		; Cargar el valor inicial correcto (244 en decimal)

	; Puerto C como salida para los LEDs del contador binario
    LDI R16, 0xFF
    OUT DDRC, R16
    LDI R16, 0x00  ; LEDs apagados
    OUT PORTC, R16

	; Configuración de puerto B (PB0 y PB1) como entrada con pull-ups
	CBI DDRB, PB0
	CBI DDRB, PB1
	SBI PORTB, PB0
	SBI PORTB, PB1

	; Puerto D como salida para los LEDs del contador hexadecimal
    LDI R16, 0xFF
    OUT DDRD, R16
    LDI R16, 0x7B  ; LEDs formando el 0 en display
    OUT PORTD, R16

	; Configuración de PB5 como salida de LED de alarma
	SBI DDRB, PB5
	CBI PORTB, PB5	;LED apagado

    ; Inicializar contadores
    LDI R17, 0x00     ; Contador intermedio (binario)
    LDI R18, 0x00     ; Contador de 1 segundo
    LDI R19, 0x00     ; Contador intermedio (hexadecimal)
    LDI R20, 0x03     ; Valor de antirrebote
    LDI R21, 0x7B     ; Valor de 0 en el display
	
; Bucle principal
LOOP:
    IN R16, PINB		; Leemos las entradas del PINB
		; Antirrebote
		ANDI R16, 0x03	; Leemos solo los primeros dos bits
		CP R20, R16		; Ver si no hubo un cambio
		BREQ cont_bi	; Si son iguales ir al contador binario
		IN R16, PINB	; Verificar nuevamente
		ANDI R16, 0x03	; Solo los primeros dos bits
		CP R20, R16
		BREQ LOOP		; Si son iguales regresar el LOOP
		MOV R20, R16	; Guardar el cambio
	; Manejo del contador hex
   	SBRS R16, 0 ; Salta si PB0 está a 1 (no presionado)
    RJMP incremento	; Ir a la subrutina de incrementar
   	SBRS R16, 1 ; Salta si PB1 está a 1 (no presionado)
   	RJMP decremento	; Ir a la subrutina de decremento
   	RJMP LOOP
;--------------------------------------------------------------------------------------------
; Rutina del contador binario (LEDs)
cont_bi:
	IN R16, TIFR0			; Leemos el registro TIFR0
    	SBRS R16, TOV0		; Verificamos si la bandera de overflow está activa
    	RJMP LOOP			; Salta si sí, si no regresa a LOOP
    	SBI TIFR0, TOV0		; Limpiar la bandera de overflow
    	LDI R16, 0xF4		; Implementamos valor inicial del contador
    	OUT TCNT0, R16		; Recargar el Timer0
    	INC R17				; Incrementar contador de 100ms
	CPI R17, 10				; ¿Han pasado 10 interrupciones? (1 segundo)
	BRNE LOOP				; Si no, repetir y regresar a LOOP
	LDI R17, 0				; Reiniciar contador intermedio
	CP R18, R19				; Comparar los contadores
	BREQ alarma				; Si sí ir a hacer el reset
	INC R18					; Incrementar contador de 1s
	CPI R18, 0x10			; Verificar si se pasó de 15
    BREQ reinicio1			; Si se pasa de 15, lo reinicia a 0
	OUT PORTC, R18			; Mostrar valor en los LEDs
    RJMP LOOP

; Subrutinas del contador binario
; Rutina de reinicio a 0
reinicio1:
    LDI R18, 0				; Reinicio a 0
    OUT PORTC, R18			; Enviar el valor a los LEDs
    RJMP LOOP
; Rutina de reset de contador binario
alarma:
	LDI R18, 0				; Reinicio a 0
	OUT PORTC, R18			; Enviar el valor a los LEDs
	SBIC PORTB, 5			; Verificar si el PB5 está apagado, saltar si sí
	RJMP ap_alarma			; Si no, ir a la rutina de apagado
	SBI PORTB, 5			; Prender PB5
	RJMP LOOP				
ap_alarma:
	CBI PORTB, 5			; Apagar PB5
	RJMP LOOP
;----------------------------------------------------------------------------------------------
; Subrutinas de contador hexadecimal
; Rutina de incremento
incremento:
    INC R19					; Incrementa el contador 1
    CPI R19, 0x10			; ¿Contador llegó a 16?
    BREQ contador_cero		; Si sí, reinicio a 0
    CALL actualizar_leds	; Actualizar LEDs 
	RJMP LOOP
; Rutina de decremento
decremento:
    DEC R19					; Decrementar el contador 1
    CPI R19, 0xFF			; ¿Contador llegó a -1(255)?
    BREQ contador_quince	; Si sí, reinicio a 15
    CALL actualizar_leds	; Actualizar LEDs
	RJMP LOOP
; Reinicio a 0 contador
contador_cero:
    LDI R19, 0x00			; Regresar el contador a 0
	CALL actualizar_leds	; Actualizar LEDs
    RJMP LOOP
; Reinicio a 15 contador
contador_quince:
    LDI R19, 0x0F			; Regresar el contador a 15
	CALL actualizar_leds	; Actualizar LEDs
    RJMP LOOP
; Actualización del display según el valor de R19
actualizar_leds:
	CPI R19, 0x00		; Verificar si el contador esta en 0
	BREQ led0
	CPI R19, 0x01		; Verificar si el contador esta en 1
	BREQ led1
	CPI R19, 0x02		; Verificar si el contador esta en 2
	BREQ led2
	CPI R19, 0x03		; Verificar si el contador esta en 3
	BREQ led3
	CPI R19, 0x04		; Verificar si el contador esta en 4
	BREQ led4
	CPI R19, 0x05		; Verificar si el contador esta en 5
	BREQ led5
	CPI R19, 0x06		; Verificar si el contador esta en 6
	BREQ led6
	CPI R19, 0x07		; Verificar si el contador esta en 7
	BREQ led7
	CPI R19, 0x08		; Verificar si el contador esta en 8
	BREQ led8
	CPI R19, 0x09		; Verificar si el contador esta en 9
	BREQ led9
	CPI R19, 0x0A		; Verificar si el contador esta en 10
	BREQ led10
	CPI R19, 0x0B		; Verificar si el contador esta en 11
	BREQ led11
	CPI R19, 0x0C		; Verificar si el contador esta en 12
	BREQ led12
	CPI R19, 0x0D		; Verificar si el contador esta en 13
	BREQ led13
	CPI R19, 0x0E		; Verificar si el contador esta en 14
	BREQ led14
	CPI R19, 0x0F		; Verificar si el contador esta en 15
	BREQ led15
	RET	

led0:
	LDI R21, 0x7B		; Ponerle el valor de 0 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led1:
	LDI R21, 0x0A		; Ponerle el valor de 1 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led2:
	LDI R21, 0xB3		; Ponerle el valor de 2 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led3:
	LDI R21, 0x9B		; Ponerle el valor de 3 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led4:
	LDI R21, 0xCA		; Ponerle el valor de 4 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led5:
	LDI R21, 0xD9		; Ponerle el valor de 5 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led6:
	LDI R21, 0xF9		; Ponerle el valor de 6 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led7:
	LDI R21, 0x0B		; Ponerle el valor de 7 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led8:
	LDI R21, 0xFB		; Ponerle el valor de 8 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led9:
	LDI R21, 0xDB		; Ponerle el valor de 9 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led10:
	LDI R21, 0xEB		; Ponerle el valor de 10 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led11:
	LDI R21, 0xF8		; Ponerle el valor de 11 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led12:
	LDI R21, 0x71		; Ponerle el valor de 12 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led13:
	LDI R21, 0xBA		; Ponerle el valor de 13 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led14:
	LDI R21, 0xF1		; Ponerle el valor de 14 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
led15:
	LDI R21, 0xE1		; Ponerle el valor de 15 a r21
	OUT PORTD, R21		; Mostrarlo en el display
	RET
;--------------------------------------------------------------------------------------
; Rutina de delay
DELAY:
	LDI R22, 0		; Valor inicial para r22
	rebote1:
		LDI R23, 0	; Valor inicial para r23
	rebote2:
		INC R23		; Incrementar valor de r23
		CPI R23, 0	; Saltar si el valor de r23 es cero
		BRNE rebote2
		INC R22		; Incrementar valor de r22
		CPI R22, 0	; Saltar si el valor de r22 es cero
		BRNE rebote1
	RET
